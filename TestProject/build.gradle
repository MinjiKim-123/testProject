plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'nu.studer.jooq' version "9.0"
}

springBoot {
    mainClass.set('com.test.Application')
}

group = 'com.test'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.41.0'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    runtimeOnly 'com.h2database:h2'
    jooqGenerator  'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

compileJava {
    options.compilerArgs << '-parameters'
}

jooq {
    version = dependencyManagement.importedProperties['jooq.version']
    configurations {
        main {
            //generateSchemaSourceOnCompilation = true
            generationTool  {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'org.h2.Driver'
                    url = 'jdbc:h2:~/test;AUTO_SERVER=TRUE'
                    user = 'testUser'
                    password = 'test1234'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    strategy {
                        name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                    }
                    database {
                        name = 'org.jooq.meta.h2.H2Database'
                        inputSchema = 'test'
                    }
                    target {
                        packageName = 'nu.studer.sample'
                        //directory = 'build/generated-src/jooq/main'
                    }
                }
            }
        }
    }
}

tasks.named('generateJooq').configure { allInputsDeclared = true }